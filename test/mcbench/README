This benchmarking tool attempts to simulate the pattern of memcached access
generated by Facebook's code base. It simulates a key space of a particular
size and accesses the keys with a mix of "get" and "delete" requests.
Any "get" that doesn't return a result is immediately followed by a "set"
which sets the value to a random size (with smaller sizes much more
frequent than large ones.)

Run with no arguments for a usage message.

Some useful settings:

-g 100    Never expire keys -- once the key space is fully populated, this
          will send "get" requests and nothing else.

-t 999999 If you're running memcached under a debugger, use this so the test
          won't abort while you're stopped at a breakpoint.

-c 1 -r 1 One connection, one request at a time (synchronous test).

-k 1      Only operate on one key


TO DO:

Rate limiting so it can be run against a production server without pounding
the server to death

Make it call setrlimit() to increase the max number of open descriptors

